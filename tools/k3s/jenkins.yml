apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jenkins-admin
rules:
  - apiGroups: [""]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins-admin
  namespace: demo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins-admin
subjects:
- kind: ServiceAccount
  name: jenkins-admin
  namespace: demo
---
apiVersion: v1
kind: Namespace
metadata:
  name: demo
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: demo-storage-class
  labels:
    type: local
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-pv
  labels:
    type: local
spec:
  storageClassName: demo-storage-class
  claimRef:
    name: jenkins-pvc
    namespace: demo
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  local:
    path: /jenkins
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - shaileshthakur
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
  namespace: demo
spec:
  storageClassName: demo-storage-class
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: jenkins-admin
      containers: 
      - name: jenkins
        image: jenkins/jenkins:lts
        resources:
          limits:
            memory: "2Gi"
            cpu: "1000m"
          requests:
            memory: "500Mi"
            cpu: "500m"
        ports:
          - name: httpport
            containerPort: 8080
          - name: jnlpport
            containerPort: 50000
        livenessProbe:
          httpGet:
            path: "/login"
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
        readinessProbe: 
          httpGet:
            path: "/login"
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
          - name: jenkins-data
            mountPath: /var/jenkins_home
      volumes:
      - name: jenkins-data
        persistentVolumeClaim:
          claimName: jenkins-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-svc
  namespace: demo
spec:
  selector:
    app: jenkins
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 32000
